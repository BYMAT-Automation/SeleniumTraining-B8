<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Regression Testing" duration-ms="83355" started-at="2021-05-16T10:57:41 IST" finished-at="2021-05-16T10:59:04 IST">
    <groups>
    </groups>
    <test name="Regression" duration-ms="83355" started-at="2021-05-16T10:57:41 IST" finished-at="2021-05-16T10:59:04 IST">
      <class name="companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount1">
        <test-method status="PASS" signature="initialization()[pri:0, instance:companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount1@d44fc21]" name="initialization" is-config="true" duration-ms="1334" started-at="2021-05-16T10:57:39 IST" finished-at="2021-05-16T10:57:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="getClassName()[pri:0, instance:companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount1@d44fc21]" name="getClassName" is-config="true" duration-ms="1" started-at="2021-05-16T10:57:41 IST" finished-at="2021-05-16T10:57:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getClassName -->
        <test-method status="PASS" signature="createAnNewAccount1(java.util.Hashtable)[pri:0, instance:companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount1@d44fc21]" name="createAnNewAccount1" duration-ms="22423" started-at="2021-05-16T10:57:41 IST" data-provider="data_Collection" finished-at="2021-05-16T10:58:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{User_Name=Selenium Trainer, Application_Name=My Store, Iteration=1.0, Last_Name=Trainer, Address=Pune, Password=PWD12, City=Pune, Gender=Male, First_Name=Selenium, Email_Address=test1232131@test.com, State=MH, Value2=ALREADY REGISTERED?, Value1=CREATE AN ACCOUNT}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnNewAccount1 -->
      </class> <!-- companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount1 -->
      <class name="companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount2">
        <test-method status="PASS" signature="getClassName()[pri:0, instance:companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount2@23faf8f2]" name="getClassName" is-config="true" duration-ms="0" started-at="2021-05-16T10:58:11 IST" finished-at="2021-05-16T10:58:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getClassName -->
        <test-method status="FAIL" signature="createAnNewAccount2(java.util.Hashtable)[pri:0, instance:companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount2@23faf8f2]" name="createAnNewAccount2" duration-ms="18538" started-at="2021-05-16T10:58:11 IST" data-provider="data_Collection" finished-at="2021-05-16T10:58:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{User_Name=Selenium Trainer, Application_Name=My Store, Iteration=1.0, Last_Name=xyz, Address=Pune, Password=PWD12, City=Pune, Gender=Male, First_Name=Sangita, Email_Address=test1232131@test.com, State=MH, Value2=ALREADY REGISTERED?, Value1=CREATE AN ACCOUNT}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User not able to enter Sangita in First Name field.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User not able to enter Sangita in First Name field.
at org.testng.Assert.fail(Assert.java:99)
at companyName.ProjectName.ModuleName.utilities.CommonMethods.enterValueIntoTextBox(CommonMethods.java:29)
at companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount2.createAnNewAccount2(CreateAnNewAccount2.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnNewAccount2 -->
      </class> <!-- companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount2 -->
      <class name="companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount3">
        <test-method status="PASS" signature="getClassName()[pri:0, instance:companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount3@2d6eabae]" name="getClassName" is-config="true" duration-ms="1" started-at="2021-05-16T10:58:36 IST" finished-at="2021-05-16T10:58:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getClassName -->
        <test-method status="PASS" signature="createAnNewAccount3(java.util.Hashtable)[pri:0, instance:companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount3@2d6eabae]" name="createAnNewAccount3" duration-ms="20953" started-at="2021-05-16T10:58:36 IST" data-provider="data_Collection" finished-at="2021-05-16T10:58:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{User_Name=Selenium Trainer, Application_Name=My Store, Iteration=1.0, Last_Name=pqr, Address=Pune, Password=PWD12, City=Pune, Gender=Male, First_Name=Sachin, Email_Address=test1232131@test.com, State=MH, Value2=ALREADY REGISTERED?, Value1=CREATE AN ACCOUNT}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAnNewAccount3 -->
      </class> <!-- companyName.ProjectName.ModuleName.testCases.CreateAnNewAccount3 -->
    </test> <!-- Regression -->
  </suite> <!-- Regression Testing -->
</testng-results>
